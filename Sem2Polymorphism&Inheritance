class Vehicle{
    String brand;
    double distance;
    double time;

    public Vehicle(String brand, double distance, double time) {
        this.brand = brand;
        this.distance = distance;
        this.time = time;
    }

    public void displayDetails() {
        System.out.println("Brand: " + brand);
    }

    public double calculateSpeed() {
        return distance / time;
    }
}

class Car extends Vehicle {
    int numberOfDoors;

    public Car(String brand, double distance, double time, int numberOfDoors) {
        super(brand, distance, time);
        this.numberOfDoors = numberOfDoors;
    }

    @Override
    public void displayDetails() {
        System.out.println("Car Brand: " + brand);
        System.out.println("Number of Doors: " + numberOfDoors);
        System.out.println("Speed: " + calculateSpeed() + " km/h");
        System.out.println();
    }

    @Override
    public double calculateSpeed() {
        return super.calculateSpeed() + 10;
    }
}

class Bicycle extends Vehicle {
    boolean hasGears;

    public Bicycle(String brand, double distance, double time, boolean hasGears) {
        super(brand, distance, time);
        this.hasGears = hasGears;
    }

    @Override
    public void displayDetails() {
        System.out.println("Bicycle Brand: " + brand);
        System.out.println("Has Gears: " + (hasGears ? "Yes" : "No"));
        System.out.println("Speed: " + calculateSpeed() + " km/h");
        System.out.println();
    }

    @Override
    public double calculateSpeed() {
        return hasGears ? super.calculateSpeed() + 2 : super.calculateSpeed();
    }
}

public class Polymorphism {
    public static void main(String[] args) {
        Vehicle[] vehicles = new Vehicle[3];
        vehicles[0] = new Car("Toyota", 150, 2, 4);
        vehicles[1] = new Bicycle("Trek", 30, 1.5, true);
        vehicles[2] = new Car("Honda", 200, 2.5, 2);

        System.out.println("Vehicle Details:\n");

        for (Vehicle v : vehicles) {
            v.displayDetails();
        }
    }
}
